services:
    # imagem micro 01
    micro_01:
        build:
            args:
                user: zero
                uid: 1000
            context: ./
            dockerfile: Dockerfile
        image: laravel-app
        restart: unless-stopped
        working_dir: /var/www/
        volumes:
            - ./:/var/www
        # depends_on:
        #     - redis_micro_01
        #     - queue
        networks:
            - microservices

    # nginx
    nginx:
        image: nginx:alpine
        restart: unless-stopped
        ports:
            - 8000:80
        volumes:
            - ./:/var/www
            - ./docker/nginx/:/etc/nginx/conf.d/
        networks:
            - microservices

    # mysql micro 01
    db_micro_01:
        image: mysql:5.7.22
        restart: unless-stopped
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_USER: ${DB_USERNAME}
        volumes:
            - ./.docker/mysql/dbdata:/var/lib/mysql
        ports:
            - 3308:3306
        networks:
            - microservices

    db_micro_01_admin:
        image: phpmyadmin/phpmyadmin
        restart: unless-stopped
        environment:
            PMA_HOST: db_micro_01
            PMA_PORT: 3306
        ports:
            - 8080:80
        depends_on:
            - db_micro_01
        networks:
            - microservices

    # # queue micro 01
    # queue:
    #     build:
    #         args:
    #             user: carlos
    #             uid: 1000
    #         context: ./
    #         dockerfile: Dockerfile
    #     restart: unless-stopped
    #     command: "php artisan queue:work"
    #     volumes:
    #         - ./:/var/www
    #     depends_on:
    #         - redis_micro_01
    #     networks:
    #         - microservices

    # #redis
    # redis_micro_01:
    #     image: redis:latest
    #     networks:
    #         - microservices

networks:
    microservices:
        driver: bridge
